name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  # lint:
  #   runs-on: ubuntu-latest
  #   strategy:
  #     matrix:
  #       python-version: ["3.8", "3.9", "3.10"]
  #   steps:
  #   - uses: actions/checkout@v3
  #   - name: Set up Python ${{ matrix.python-version }}
  #     uses: actions/setup-python@v3
  #     with:
  #       python-version: ${{ matrix.python-version }}
  #   - name: Install dependencies
  #     run: |
  #       python -m pip install --upgrade pip
  #       pip install pylint
  #   - name: Analysing the code with pylint
  #     run: |
  #       pylint $(git ls-files '*.py')

  lint-and-test:
      runs-on: ubuntu-latest
      steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r app/requirements.txt
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          # flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Test with pytest
        run: |
          export PYTHONPATH=$(pwd)/app
          pytest tests/*.py

  build-and-push:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Docker Login
      uses: docker/login-action@v2.1.0
      with:
        username: ${{ secrets.DOCKER_USER }}
        password: ${{ secrets.DOCKER_PASS }}
    - name: Build the Docker image
      run: | 
        docker build . --file Dockerfile --tag brocaneli/twitter-hashtags:${{ github.sha }}
        docker tag brocaneli/twitter-hashtags:${{ github.sha }} brocaneli/twitter-hashtags:latest
        docker push brocaneli/twitter-hashtags:${{ github.sha }} 
        docker push brocaneli/twitter-hashtags:latest
    needs: lint-and-test
    if: github.ref == 'refs/heads/main'

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y ansible

    - name: Configure SSH key
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.AZURE_SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        ssh-keyscan -H "{{ secrets.AZURE_VM_IP_ADDRESS }}"" >> ~/.ssh/known_hosts

    - name: Run Ansible playbook
      run: ansible-playbook ansible/playbook.yml -i ansible/inventory.yml
